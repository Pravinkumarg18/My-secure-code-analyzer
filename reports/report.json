[
  {
    "id": "JS-EVAL-001",
    "file": "samples/js/app.js",
    "line": 20,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-95",
    "snippet": "eval(req.query.code); // code injection",
    "detected_by": "Context-AST+AST(Taint)"
  },
  {
    "id": "js-child-process-exec",
    "file": "samples/js/app.js",
    "line": 12,
    "severity": "CRITICAL",
    "category": "Code-Execution",
    "message": "Use of child_process.exec() with user input may allow remote command execution.",
    "suggestion": "Use safer alternatives like execFile with strict input validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-78",
    "snippet": "child_process.exec('ls ' + req.query.dir); // command injection",
    "detected_by": "Context-AST+AST(Taint)"
  },
  {
    "id": "JS-DOMXSS-AST-001",
    "file": "samples/js/app.js",
    "line": 31,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input flows into innerHTML assignment \u2192 DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "document.body.innerHTML = req.query.html; // XSS in client-side route (demo)",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-CTX-002",
    "file": "samples/js/app.js",
    "line": 7,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Dangerous dynamic code execution (Function, setTimeout, setInterval) with untrusted input.",
    "suggestion": "Avoid passing untrusted input to code execution APIs. Validate or remove such usage.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "",
    "snippet": "const h = crypto.createHash('md5').update(req.query.q || 'x').digest('hex');",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 1,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const express = require('express');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 3,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const crypto = require('crypto');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 4,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const child_process = require('child_process');",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 6,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/hash', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 11,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/run', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 13,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.send(\"ok\");",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 19,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/eval', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 21,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.send(\"done\");",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 24,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/search', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 27,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.send(\"searching\");",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 30,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "app.get('/xss', (req, res) => {",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 32,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "res.send(\"done\");",
    "detected_by": "AST"
  },
  {
    "id": "JS-CONSOLE-001",
    "file": "samples/js/app2.js",
    "line": 6,
    "severity": "LOW",
    "category": "Information Disclosure",
    "message": "Console logging detected",
    "suggestion": "Remove console statements in production.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log(\"Admin section visible!\"); // BAD: client-side auth check",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-CONSOLE-001",
    "file": "samples/js/app2.js",
    "line": 32,
    "severity": "LOW",
    "category": "Information Disclosure",
    "message": "Console logging detected",
    "suggestion": "Remove console statements in production.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log(\"Debug: reached end of app2.js\");*/",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-CLIENT-AUTH-001",
    "file": "samples/js/app2.js",
    "line": 5,
    "severity": "MEDIUM",
    "category": "Broken Access Control",
    "message": "Authorization logic found in client-side code. This can be bypassed.",
    "suggestion": "Do not rely on client-side authorization checks.",
    "owasp": "A01:2021-BrokenAccessControl",
    "cwe": "",
    "snippet": "if (user.role === \"admin\") {",
    "detected_by": "Regex"
  },
  {
    "id": "JS-DISABLE-CSP-001",
    "file": "samples/js/app2.js",
    "line": 13,
    "severity": "HIGH",
    "category": "Insecure Design",
    "message": "CSP with unsafe-inline detected. This weakens XSS protection.",
    "suggestion": "Avoid unsafe-inline; use nonces or hashes in CSP.",
    "owasp": "A04:2021-InsecureDesign",
    "cwe": "",
    "snippet": "const cspHeader = \"Content-Security-Policy: default-src 'self' 'unsafe-inline'\";",
    "detected_by": "Regex"
  },
  {
    "id": "JS-JQUERY-OLD-001",
    "file": "samples/js/app2.js",
    "line": 19,
    "severity": "MEDIUM",
    "category": "Outdated Components",
    "message": "Old jQuery version detected. Likely vulnerable to XSS.",
    "suggestion": "Upgrade to latest jQuery version.",
    "owasp": "A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "const jqueryVer = \"jquery-1.12.4.min.js\";",
    "detected_by": "Regex"
  },
  {
    "id": "GEN-HEUR-014",
    "file": "samples/js/app2.js",
    "line": 25,
    "severity": "MEDIUM",
    "category": "Hardcoded Urls",
    "message": "Use of insecure HTTP URL.",
    "suggestion": "Always use HTTPS instead of HTTP.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "const userUrl = \"http://\" + window.location.search.replace(\"?url=\", \"\");",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-XSS-001",
    "file": "samples/js/app3.js",
    "line": 10,
    "severity": "HIGH",
    "category": "Cross-Site Scripting",
    "message": "Possible DOM-based XSS via unsafe sink.",
    "suggestion": "Use textContent instead of innerHTML; sanitize/encode inputs.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "snippet": "document.getElementById(\"demo\").innerHTML = window.location;*/",
    "detected_by": "Regex"
  },
  {
    "id": "JS-TIMEOUT-001",
    "file": "samples/js/app3.js",
    "line": 4,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "Passing strings to setTimeout/setInterval executes code like eval().",
    "suggestion": "Use function references instead of strings.",
    "owasp": "A03:2021-Injection,A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "setTimeout(\"alert('XSS')\", 1000);",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app3.js",
    "line": 7,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "CWE-922",
    "snippet": "localStorage.setItem(\"password\", \"12345\");",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app3.js",
    "line": 6,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "// 2. localStorage storing a password \u2192 should trigger JS-LOCALSTORAGE-AST",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-EVAL-001",
    "file": "samples/js/app4.js",
    "line": 65,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "eval(code); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-EVAL-001",
    "file": "samples/js/app4.js",
    "line": 195,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "eval(payload); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-AST-001",
    "file": "samples/js/app4.js",
    "line": 45,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input flows into innerHTML assignment \u2192 DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "container.innerHTML = '<h3>Search:</h3>' + untrusted1; // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-AST-001",
    "file": "samples/js/app4.js",
    "line": 208,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input flows into innerHTML assignment \u2192 DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "a.innerHTML = '<a href=\"' + u + '\">go</a>'; // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 126,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-338",
    "snippet": "const token = Math.random().toString(36).slice(2); // SINK",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 102,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log('Fetched length (insecure):', (await res.text()).length);",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 127,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection,A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log('Weak token:', token);",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 152,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log('Polluted?', (check).pwned === true);",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 181,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log('Testing user regex length=', pattern.length);",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 114,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "CWE-922",
    "snippet": "localStorage.setItem('authToken', t); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 191,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "CWE-346",
    "snippet": "window.addEventListener('message', (ev) => {",
    "detected_by": "AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 32,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "",
    "snippet": "token: () => getParam('token'),",
    "detected_by": "Context-AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 112,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "const t = SRC.token(); // SOURCE",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 118,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures,A05:2021-SecurityMisconfiguration,A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "",
    "snippet": "document.cookie = 'session=' + encodeURIComponent(SRC.token() || 'demo') + '; path=/'; // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "GEN-HEUR-003",
    "file": "samples/js/app4.js",
    "line": 125,
    "severity": "HIGH",
    "category": "Secrets",
    "message": "Possible hardcoded secret or credential detected.",
    "suggestion": "Move secrets to environment variables or a secure vault.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "// VULN: V011 \u2014 Insecure Randomness \u2014 security token via Math.random",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-012",
    "file": "samples/js/app4.js",
    "line": 72,
    "severity": "LOW",
    "category": "Exception Handling",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log or handle exceptions securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "",
    "snippet": "try { f(); } catch (e) {}",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-012",
    "file": "samples/js/app4.js",
    "line": 103,
    "severity": "LOW",
    "category": "Exception Handling",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log or handle exceptions securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "",
    "snippet": "} catch (e) {}",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-012",
    "file": "samples/js/app4.js",
    "line": 153,
    "severity": "LOW",
    "category": "Exception Handling",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log or handle exceptions securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "",
    "snippet": "} catch (e) {}",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-012",
    "file": "samples/js/app4.js",
    "line": 183,
    "severity": "LOW",
    "category": "Exception Handling",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log or handle exceptions securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "",
    "snippet": "} catch (e) {}",
    "detected_by": "Heuristic"
  },
  {
    "id": "GEN-HEUR-012",
    "file": "samples/js/app4.js",
    "line": 233,
    "severity": "LOW",
    "category": "Exception Handling",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log or handle exceptions securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "",
    "snippet": "} catch (e) {}",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-CTX-002",
    "file": "samples/js/app4.js",
    "line": 77,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Dangerous dynamic code execution (Function, setTimeout, setInterval) with untrusted input.",
    "suggestion": "Avoid passing untrusted input to code execution APIs. Validate or remove such usage.",
    "owasp": "A03:2021-Injection,A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "if (later) setTimeout(later, 50); // SINK (string form)",
    "detected_by": "Context-AST"
  },
  {
    "id": "GEN-HEUR-024",
    "file": "samples/js/app4.js",
    "line": 51,
    "severity": "MEDIUM",
    "category": "Deprecated Apis",
    "message": "document.write() is dangerous and deprecated.",
    "suggestion": "Use DOM manipulation APIs instead.",
    "owasp": "A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "// VULN: V003 \u2014 DOM XSS \u2014 document.write with untrusted html",
    "detected_by": "Heuristic"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 54,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection,A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "document.write('<section>' + untrusted3 + '</section>'); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-FUNCTION-001",
    "file": "samples/js/app4.js",
    "line": 71,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of Function constructor is dangerous.",
    "suggestion": "Avoid Function(); use safer alternatives.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const f = new Function('return (' + fnBody + ')'); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 26,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "q: () => getParam('q'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 27,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "json: () => getParam('json'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 28,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "url: () => getParam('url'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 29,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "html: () => getParam('html'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 30,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "code: () => getParam('code'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 31,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "target: () => getParam('target'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 33,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "re: () => getParam('re'),",
    "detected_by": "AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 34,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "msg: () => getParam('msg')",
    "detected_by": "AST"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 41,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const container = document.getElementById('out1') || document.body;",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-002",
    "file": "samples/js/app4.js",
    "line": 49,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input flows into insertAdjacentHTML \u2192 DOM XSS.",
    "suggestion": "Use DOM APIs safely or sanitize with DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "container.insertAdjacentHTML('beforeend', '<div class=\"result\">' + untrusted2 + '</div>'); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 161,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const btn = document.getElementById('dangerBtn') || document.createElement('button');",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 166,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "btn.setAttribute('onclick', handler); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 193,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if (typeof ev.data === 'string' && ev.data.startsWith('RUN:')) {",
    "detected_by": "AST"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 207,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const a = document.createElement('div');",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 219,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const el = document.createElement('div');",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 220,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "el.setAttribute('style', v); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-TIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 232,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Pass a function reference instead of a string.",
    "owasp": "A03:2021-Injection,A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "await fetch('/api/echo', { headers: { 'X-Note': msg } }); // SINK (potential splitting on some servers)",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 243,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const c = document.getElementById('out2') || document.body;",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-003",
    "file": "samples/js/app4.js",
    "line": 254,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input passed to document.write \u2192 DOM XSS.",
    "suggestion": "Avoid document.write; use safe DOM methods.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "const link = document.createElement('a');",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-DOMXSS-AST-001",
    "file": "samples/js/app4.js",
    "line": 244,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting",
    "message": "User input flows into innerHTML assignment \u2192 DOM XSS.",
    "suggestion": "Use textContent or sanitize with DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "c.innerHTML += '<p>' + extra + '</p>'; // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-EVAL-TAINT-001",
    "file": "samples/js/app4.js",
    "line": 19,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "eval() with user input \u2192 Remote Code Execution.",
    "suggestion": "Avoid eval(); use JSON.parse or safe parsers.",
    "owasp": "A03:2021-Injection,A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "const m = new RegExp('[?&]' + name + '=([^&#]*)').exec(location.search);",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-OPENREDIRECT-001",
    "file": "samples/js/app4.js",
    "line": 255,
    "severity": "HIGH",
    "category": "Open Redirect",
    "message": "User input assigned to location.href \u2192 Open Redirect.",
    "suggestion": "Validate URLs against an allowlist.",
    "owasp": "A01:2021-BrokenAccessControl,A03:2021-Injection",
    "cwe": "",
    "snippet": "link.href = u; // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-FETCH-001",
    "file": "samples/js/app4.js",
    "line": 101,
    "severity": "HIGH",
    "category": "Data Exfiltration",
    "message": "User-controlled fetch() with credentials \u2192 sensitive data exfiltration.",
    "suggestion": "Validate destination URLs and avoid credentials: 'include' with untrusted URLs.",
    "owasp": "A03:2021-Injection,A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "const res = await fetch(u, { credentials: 'include' }); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "JS-REDOS-001",
    "file": "samples/js/app4.js",
    "line": 179,
    "severity": "HIGH",
    "category": "Redos",
    "message": "User-controlled regex pattern may cause ReDoS.",
    "suggestion": "Validate regex input or use safe-regex libraries.",
    "owasp": "A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "const re = new RegExp(pattern); // SINK",
    "detected_by": "Context-AST"
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index.php",
    "line": 12,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if(isset($_GET['cmd'])){",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-XSS-001",
    "file": "samples/php/index.php",
    "line": 8,
    "severity": "HIGH",
    "category": "Cross-Site Scripting",
    "message": "Echoing unescaped user input can cause XSS.",
    "suggestion": "Encode output with htmlspecialchars and validate inputs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "echo $_GET['html']; // XSS",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-CRYPTO-001",
    "file": "samples/php/index.php",
    "line": 10,
    "severity": "MEDIUM",
    "category": "Weak Cryptography",
    "message": "Weak hash algorithm used.",
    "suggestion": "Use password_hash (bcrypt/argon2) or sodium/openssl strong hashes.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "$hash = md5($_GET['p']); // weak crypto",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-ERROR-LEAK-001",
    "file": "samples/php/index.php",
    "line": 19,
    "severity": "LOW",
    "category": "Error Handling",
    "message": "Leaking raw errors or phpinfo() reveals sensitive info.",
    "suggestion": "Log errors server-side and show generic error messages.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "",
    "snippet": "var_dump($e); // error leak",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-NO-DB-ERROR-HANDLING-001",
    "file": "samples/php/index.php",
    "line": 2,
    "severity": "MEDIUM",
    "category": "Error Handling",
    "message": "Database connection created without proper error handling.",
    "suggestion": "Always wrap database connections in try/catch and log errors securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-252",
    "snippet": "$mysqli = new mysqli(\"localhost\",\"root\",\"\",\"db\");",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "file": "samples/php/index.php",
    "line": 13,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "system() detected in PHP AST; may allow command injection.",
    "suggestion": "Avoid system(); use safer built-in APIs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "system(\"ls \" . $_GET['cmd']); // command injection",
    "detected_by": "AST"
  },
  {
    "id": "PHP-EVAL-001",
    "file": "samples/php/index2.php",
    "line": 4,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "Use of eval() can lead to code injection.",
    "suggestion": "Avoid eval(); use safer alternatives.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "eval($code); // \u274c Dangerous",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index2.php",
    "line": 7,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "$file = $_GET['file'];",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-CRYPTO-001",
    "file": "samples/php/index2.php",
    "line": 18,
    "severity": "MEDIUM",
    "category": "Weak Cryptography",
    "message": "Weak hash algorithm used.",
    "suggestion": "Use password_hash (bcrypt/argon2) or sodium/openssl strong hashes.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "$hash1 = md5($password);   // \u274c Weak hash",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-CRYPTO-001",
    "file": "samples/php/index2.php",
    "line": 19,
    "severity": "MEDIUM",
    "category": "Weak Cryptography",
    "message": "Weak hash algorithm used.",
    "suggestion": "Use password_hash (bcrypt/argon2) or sodium/openssl strong hashes.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "",
    "snippet": "$hash2 = sha1($password);  // \u274c Weak hash",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-MYSQLI-001",
    "file": "samples/php/index2.php",
    "line": 14,
    "severity": "HIGH",
    "category": "Sql Injection",
    "message": "Use of mysqli_query with untrusted input may lead to SQL Injection.",
    "suggestion": "Always use prepared statements (mysqli_stmt or PDO).",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "$result = mysqli_query($conn, $query);",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-INCLUDE-001",
    "file": "samples/php/index2.php",
    "line": 22,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$page = $_GET['page'];",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-UPLOAD-001",
    "file": "samples/php/index2.php",
    "line": 38,
    "severity": "HIGH",
    "category": "Insecure File Upload",
    "message": "File upload without validation detected.",
    "suggestion": "Validate file type, size, extension; randomize name; store outside web root.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "move_uploaded_file($_FILES['file']['tmp_name'], \"uploads/\" . $_FILES['file']['name']); // \u274c No checks",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-HEUR-023",
    "file": "samples/php/index2.php",
    "line": 42,
    "severity": "LOW",
    "category": "Session Handling",
    "message": "Session start detected, ensure secure flags are set.",
    "suggestion": "Use secure session cookies (HttpOnly, Secure, SameSite).",
    "owasp": "A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "",
    "snippet": "session_start(); // \u274c No secure cookie flags",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "file": "samples/php/index2.php",
    "line": 8,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "system() detected in PHP AST; may allow command injection.",
    "suggestion": "Avoid system(); use safer built-in APIs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "system(\"cat \" . $file); // \u274c Dangerous",
    "detected_by": "AST"
  },
  {
    "id": "PHP-INCLUDE-AST-001",
    "file": "samples/php/index2.php",
    "line": 23,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected.",
    "suggestion": "Never use user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "include($page . \".php\"); // \u274c Insecure include",
    "detected_by": "AST"
  },
  {
    "id": "PHP-FILE-READ-001",
    "file": "samples/php/index3.php",
    "line": 27,
    "severity": "HIGH",
    "category": "Path Traversal",
    "message": "file_get_contents on user input may allow path traversal / arbitrary file read.",
    "suggestion": "Avoid using unvalidated input in file_get_contents.",
    "owasp": "A05:2021-SecurityMisconfiguration,A10:2021-SSRF",
    "cwe": "",
    "snippet": "$response = file_get_contents(\"http://\" . $url);",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-FILE-READ-001",
    "file": "samples/php/index3.php",
    "line": 34,
    "severity": "HIGH",
    "category": "Path Traversal",
    "message": "file_get_contents on user input may allow path traversal / arbitrary file read.",
    "suggestion": "Avoid using unvalidated input in file_get_contents.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$data = file_get_contents($filename);",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-AUTH-CHECK-001",
    "file": "samples/php/index3.php",
    "line": 6,
    "severity": "HIGH",
    "category": "Broken Access Control",
    "message": "Access control decision appears to be based on user input.",
    "suggestion": "Enforce server-side authorization using session or token checks.",
    "owasp": "A01:2021-BrokenAccessControl",
    "cwe": "",
    "snippet": "if ($_GET['role'] === 'admin') {",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-HARDCODED-SECRET-002",
    "file": "samples/php/index3.php",
    "line": 14,
    "severity": "HIGH",
    "category": "Insecure Design",
    "message": "Hardcoded secret or token detected.",
    "suggestion": "Use environment variables or a secrets manager.",
    "owasp": "A04:2021-InsecureDesign",
    "cwe": "",
    "snippet": "$secret = \"mySuperSecretApiKey123\";",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-OUTDATED-MYSQL-001",
    "file": "samples/php/index3.php",
    "line": 20,
    "severity": "HIGH",
    "category": "Outdated Components",
    "message": "Use of deprecated mysql_connect() detected.",
    "suggestion": "Migrate to PDO or mysqli with prepared statements.",
    "owasp": "A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "$conn = mysql_connect(\"localhost\", \"root\", \"password\");",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index4.php",
    "line": 6,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "echo preg_replace(\"/.*/e\", \"system('ls')\", $input);",
    "detected_by": "AST"
  },
  {
    "id": "PHP-INCLUDE-001",
    "file": "samples/php/index4.php",
    "line": 13,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$file = $_GET['page'];",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-UNSERIALIZE-AST-001",
    "file": "samples/php/index4.php",
    "line": 10,
    "severity": "CRITICAL",
    "category": "Insecure Deserialization",
    "message": "unserialize() called in AST. Dangerous with untrusted input.",
    "suggestion": "Avoid unserialize(); prefer JSON or validate inputs.",
    "owasp": "A08:2021-SoftwareandDataIntegrityFailures",
    "cwe": "",
    "snippet": "$obj = unserialize($data);",
    "detected_by": "AST"
  },
  {
    "id": "PHP-INCLUDE-AST-001",
    "file": "samples/php/index4.php",
    "line": 14,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected.",
    "suggestion": "Never use user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "include($file);",
    "detected_by": "AST"
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index5.php",
    "line": 22,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if (isset($_GET['cmd'])) {",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-INCLUDE-001",
    "file": "samples/php/index5.php",
    "line": 27,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "if (isset($_GET['page'])) {",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-HEUR-023",
    "file": "samples/php/index5.php",
    "line": 32,
    "severity": "LOW",
    "category": "Session Handling",
    "message": "Session start detected, ensure secure flags are set.",
    "suggestion": "Use secure session cookies (HttpOnly, Secure, SameSite).",
    "owasp": "A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "",
    "snippet": "session_start();",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-HARDCODED-CREDS-001",
    "file": "samples/php/index5.php",
    "line": 6,
    "severity": "HIGH",
    "category": "Sensitive Info Disclosure",
    "message": "Hardcoded database username detected.",
    "suggestion": "Use environment variables or config files instead of hardcoding credentials.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "CWE-798",
    "snippet": "$username = \"root\";",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-NO-DB-ERROR-HANDLING-001",
    "file": "samples/php/index5.php",
    "line": 11,
    "severity": "MEDIUM",
    "category": "Error Handling",
    "message": "Database connection created without proper error handling.",
    "suggestion": "Always wrap database connections in try/catch and log errors securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-252",
    "snippet": "$conn = new mysqli($servername, $username, $password, $dbname);",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "file": "samples/php/index5.php",
    "line": 23,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "system() detected in PHP AST; may allow command injection.",
    "suggestion": "Avoid system(); use safer built-in APIs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "system($_GET['cmd']);",
    "detected_by": "AST"
  },
  {
    "id": "PHP-INCLUDE-AST-001",
    "file": "samples/php/index5.php",
    "line": 28,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected.",
    "suggestion": "Never use user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "include($_GET['page']);",
    "detected_by": "AST"
  },
  {
    "id": "PHP-FILE-READ-001",
    "file": "samples/php/index6.php",
    "line": 7,
    "severity": "HIGH",
    "category": "Path Traversal",
    "message": "file_get_contents on user input may allow path traversal / arbitrary file read.",
    "suggestion": "Avoid using unvalidated input in file_get_contents.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$code = file_get_contents($argv[1] ?? \"test.php\");",
    "detected_by": "Regex"
  },
  {
    "id": "PHP-HEUR-021",
    "file": "samples/php/index6.php",
    "line": 4,
    "severity": "MEDIUM",
    "category": "Superglobals",
    "message": "Use of PHP superglobal $_REQUEST detected.",
    "suggestion": "Use $_GET or $_POST explicitly and validate input.",
    "owasp": "A01:2021-BrokenAccessControl",
    "cwe": "",
    "snippet": "* Detects if user input ($_GET, $_POST, $_REQUEST) flows into dangerous sinks",
    "detected_by": "Heuristic"
  },
  {
    "id": "PHP-HEUR-021",
    "file": "samples/php/index6.php",
    "line": 10,
    "severity": "MEDIUM",
    "category": "Superglobals",
    "message": "Use of PHP superglobal $_REQUEST detected.",
    "suggestion": "Use $_GET or $_POST explicitly and validate input.",
    "owasp": "A01:2021-BrokenAccessControl",
    "cwe": "",
    "snippet": "$sources = [\"\\$_GET\", \"\\$_POST\", \"\\$_REQUEST\"];",
    "detected_by": "Heuristic"
  },
  {
    "id": "JAVA-RUNTIME-EXEC-REGEX",
    "file": "samples/java/jav1.java",
    "line": 81,
    "severity": "CRITICAL",
    "category": "Command Injection",
    "message": "Runtime.getRuntime().exec() detected.",
    "suggestion": "Avoid direct exec(); use ProcessBuilder with validated args.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-78",
    "snippet": "Process p = Runtime.getRuntime().exec(cmd);",
    "detected_by": "Regex"
  },
  {
    "id": "JAVA-SQL-HEURISTIC",
    "file": "samples/java/jav1.java",
    "line": 98,
    "severity": "HIGH",
    "category": "Sql Injection",
    "message": "Concatenating SQL queries with user input is dangerous.",
    "suggestion": "Use PreparedStatement with bind parameters.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-89",
    "snippet": "String sql = \"SELECT * FROM users WHERE username = '\" + user + \"'\";",
    "detected_by": "Heuristic"
  },
  {
    "id": "JAVA-DESERIALIZE-AST",
    "file": "samples/java/jav1.java",
    "line": 123,
    "severity": "HIGH",
    "category": "Insecure Deserialization",
    "message": "ObjectInputStream.readObject() detected.",
    "suggestion": "Avoid deserialization of untrusted data.",
    "owasp": "A08:2021-SoftwareandDataIntegrityFailures",
    "cwe": "CWE-502",
    "snippet": "Object obj = ois.readObject();",
    "detected_by": "AST"
  },
  {
    "id": "PY-EVAL-REGEX",
    "file": "samples/python/py1.py",
    "line": 8,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use ast.literal_eval if parsing data.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-94",
    "snippet": "eval(user_input)   # VULN: PY-EVAL-REGEX + PY-EVAL-TAINT",
    "detected_by": "Regex"
  },
  {
    "id": "PY-PICKLE-LOAD-HEURISTIC",
    "file": "samples/python/py1.py",
    "line": 12,
    "severity": "HIGH",
    "category": "Insecure Deserialization",
    "message": "Use of pickle.load() is unsafe with untrusted input.",
    "suggestion": "Avoid pickle with untrusted data; use JSON or safer libraries.",
    "owasp": "A08:2021-SoftwareandDataIntegrityFailures",
    "cwe": "CWE-502",
    "snippet": "obj = pickle.load(f)  # VULN: PY-PICKLE-LOAD-HEURISTIC",
    "detected_by": "Heuristic"
  }
]