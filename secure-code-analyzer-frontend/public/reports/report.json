[
  {
    "id": "JS-EVAL-001",
    "file": "samples/js/app.js",
    "line": 20,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-470,CWE-94,CWE-95",
    "snippet": "eval(req.query.code); // code injection",
    "detected_by": "Context-AST+AST(Taint)",
    "lines": [
      20
    ]
  },
  {
    "id": "JS-CHILD-PROCESS-EXEC",
    "file": "samples/js/app.js",
    "line": 12,
    "severity": "CRITICAL",
    "category": "Command Execution",
    "message": "Use of child_process.exec() with user input may allow remote command execution.",
    "suggestion": "Use safer alternatives like execFile with strict input validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-78",
    "snippet": "child_process.exec('ls ' + req.query.dir); // command injection",
    "detected_by": "Regex+AST(Taint)",
    "lines": [
      12
    ]
  },
  {
    "id": "JS-XSS-001",
    "file": "samples/js/app.js",
    "line": 31,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting (Xss)",
    "message": "Potential DOM XSS: User input written directly to the DOM without sanitization.",
    "suggestion": "Avoid using document.write/innerHTML/outerHTML with untrusted input. Use textContent, setAttribute, or sanitize input with libraries like DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "snippet": "document.body.innerHTML = req.query.html; // XSS in client-side route (demo)",
    "detected_by": "Context-AST",
    "lines": [
      31
    ]
  },
  {
    "id": "JS-WEAK-HASH",
    "file": "samples/js/app.js",
    "line": 7,
    "severity": "HIGH",
    "category": "Cryptography",
    "message": "Weak hashing algorithm (MD5/SHA1) used.",
    "suggestion": "Use SHA-256, SHA-512, or SHA-3. For passwords, use bcrypt, scrypt, or Argon2 instead of general-purpose hashes.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "CWE-327,CWE-328,CWE-94",
    "snippet": "const h = crypto.createHash('md5').update(req.query.q || 'x').digest('hex');",
    "detected_by": "AST",
    "lines": [
      7
    ]
  },
  {
    "id": "JS-SETTIMEOUT-AST-001",
    "file": "samples/js/app.js",
    "line": 1,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Always pass a function reference or arrow function instead of a string.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-94",
    "snippet": "const express = require('express');",
    "detected_by": "AST",
    "lines": [
      1,
      3,
      4,
      13,
      21,
      27,
      32
    ]
  },
  {
    "id": "JS-SETTIMEOUT-TAINT-001",
    "file": "samples/js/app.js",
    "line": 6,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "setTimeout() with user-controlled string \u2192 Remote Code Execution.",
    "suggestion": "Always pass function references or arrow functions, never strings.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-94",
    "snippet": "app.get('/hash', (req, res) => {",
    "detected_by": "Context-AST",
    "lines": [
      6,
      11,
      19,
      24,
      30
    ]
  },
  {
    "id": "JS-CONSOLE-001",
    "file": "samples/js/app2.js",
    "line": 6,
    "severity": "LOW",
    "category": "Information Disclosure",
    "message": "Console logging detected (informational).",
    "suggestion": "Remove console statements in production.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-200",
    "snippet": "console.log(\"Admin section visible!\"); // BAD: client-side auth check",
    "detected_by": "Heuristic",
    "lines": [
      6,
      32
    ]
  },
  {
    "id": "JS-HARDCODED-CREDS-001",
    "file": "samples/js/app2.js",
    "line": 5,
    "severity": "CRITICAL",
    "category": "Authentication",
    "message": "Hardcoded credentials or secrets detected in JavaScript code.",
    "suggestion": "Do not hardcode usernames, passwords, API keys, or tokens in client-side or server-side code. Use secure environment variables, configuration files, or a secrets manager.",
    "owasp": "A01:2021-BrokenAccessControl,A02:2021-CryptographicFailures",
    "cwe": "CWE-602,CWE-798",
    "snippet": "if (user.role === \"admin\") {",
    "detected_by": "Regex",
    "lines": [
      5
    ]
  },
  {
    "id": "JS-JQUERY-OLD-001",
    "file": "samples/js/app2.js",
    "line": 19,
    "severity": "MEDIUM",
    "category": "Outdated Components",
    "message": "Old jQuery v1.x detected, which has multiple XSS vulnerabilities.",
    "suggestion": "Upgrade to the latest jQuery version (\u22653.6.x).",
    "owasp": "A06:2021-VulnerableandOutdatedComponents",
    "cwe": "CWE-1104",
    "snippet": "const jqueryVer = \"jquery-1.12.4.min.js\";",
    "detected_by": "Regex",
    "lines": [
      19
    ]
  },
  {
    "id": "JS-SSRF-001",
    "file": "samples/js/app2.js",
    "line": 26,
    "severity": "HIGH",
    "category": "Server-Side Request Forgery",
    "message": "Potential SSRF: unvalidated user input flows into HTTP request.",
    "suggestion": "Validate and restrict request URLs against an allowlist.",
    "owasp": "A10:2021-SSRF",
    "cwe": "CWE-918",
    "snippet": "fetch(userUrl);",
    "detected_by": "Regex",
    "lines": [
      26
    ]
  },
  {
    "id": "JS-XSS-001",
    "file": "samples/js/app3.js",
    "line": 10,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting (Xss)",
    "message": "Potential DOM XSS: User input written directly to the DOM without sanitization.",
    "suggestion": "Avoid using document.write/innerHTML/outerHTML with untrusted input. Use textContent, setAttribute, or sanitize input with libraries like DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "snippet": "document.getElementById(\"demo\").innerHTML = window.location;*/",
    "detected_by": "Regex",
    "lines": [
      10
    ]
  },
  {
    "id": "JS-TIMEOUT-001",
    "file": "samples/js/app3.js",
    "line": 4,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "Passing strings to setTimeout/setInterval executes code like eval().",
    "suggestion": "Use function references instead of strings.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-95",
    "snippet": "setTimeout(\"alert('XSS')\", 1000);",
    "detected_by": "Heuristic",
    "lines": [
      4
    ]
  },
  {
    "id": "JS-HARDCODED-CREDS-001",
    "file": "samples/js/app3.js",
    "line": 7,
    "severity": "CRITICAL",
    "category": "Authentication",
    "message": "Hardcoded credentials or secrets detected in JavaScript code.",
    "suggestion": "Do not hardcode usernames, passwords, API keys, or tokens in client-side or server-side code. Use secure environment variables, configuration files, or a secrets manager.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "CWE-798,CWE-922",
    "snippet": "localStorage.setItem(\"password\", \"12345\");",
    "detected_by": "Regex",
    "lines": [
      7
    ]
  },
  {
    "id": "JS-EVAL-001",
    "file": "samples/js/app4.js",
    "line": 65,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use safe parsers or functions.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-94",
    "snippet": "eval(code); // SINK",
    "detected_by": "AST",
    "lines": [
      65,
      195
    ]
  },
  {
    "id": "JS-XSS-001",
    "file": "samples/js/app4.js",
    "line": 45,
    "severity": "CRITICAL",
    "category": "Cross-Site Scripting (Xss)",
    "message": "Potential DOM XSS: User input written directly to the DOM without sanitization.",
    "suggestion": "Avoid using document.write/innerHTML/outerHTML with untrusted input. Use textContent, setAttribute, or sanitize input with libraries like DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "snippet": "container.innerHTML = '<h3>Search:</h3>' + untrusted1; // SINK",
    "detected_by": "Context-AST",
    "lines": [
      45,
      208,
      54
    ]
  },
  {
    "id": "JS-WEAK-RNG-001",
    "file": "samples/js/app4.js",
    "line": 126,
    "severity": "MEDIUM",
    "category": "Weak Randomness",
    "message": "Weak randomness with Math.random()",
    "suggestion": "Use crypto.getRandomValues() instead.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "CWE-338",
    "snippet": "const token = Math.random().toString(36).slice(2); // SINK",
    "detected_by": "AST",
    "lines": [
      126
    ]
  },
  {
    "id": "JS-SETTIMEOUT-AST-001",
    "file": "samples/js/app4.js",
    "line": 102,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "setTimeout called with a string \u2192 dynamic code execution like eval().",
    "suggestion": "Always pass a function reference or arrow function instead of a string.",
    "owasp": "A03:2021-Injection,A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-200,CWE-94",
    "snippet": "console.log('Fetched length (insecure):', (await res.text()).length);",
    "detected_by": "AST",
    "lines": [
      102,
      127,
      152,
      181,
      114,
      26,
      27,
      28,
      29,
      30,
      31,
      33,
      34,
      41,
      49,
      77,
      161,
      166,
      193,
      207,
      219,
      220,
      232,
      243,
      254
    ]
  },
  {
    "id": "JS-POSTMESSAGE-001",
    "file": "samples/js/app4.js",
    "line": 191,
    "severity": "CRITICAL",
    "category": "Message Handling",
    "message": "postMessage handler found. Ensure no eval() or unsafe dynamic execution inside.",
    "suggestion": "Validate origin and sanitize message data.",
    "owasp": "A03:2021-Injection,A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "CWE-346,CWE-807,CWE-94",
    "snippet": "window.addEventListener('message', (ev) => {",
    "detected_by": "Context-AST",
    "lines": [
      191
    ]
  },
  {
    "id": "JS-HARDCODED-CREDS-001",
    "file": "samples/js/app4.js",
    "line": 32,
    "severity": "CRITICAL",
    "category": "Authentication",
    "message": "Hardcoded credentials or secrets detected in JavaScript code.",
    "suggestion": "Do not hardcode usernames, passwords, API keys, or tokens in client-side or server-side code. Use secure environment variables, configuration files, or a secrets manager.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection",
    "cwe": "CWE-798,CWE-94",
    "snippet": "token: () => getParam('token'),",
    "detected_by": "AST",
    "lines": [
      32
    ]
  },
  {
    "id": "GEN-HEUR-012",
    "file": "samples/js/app4.js",
    "line": 72,
    "severity": "LOW",
    "category": "Exception Handling",
    "message": "Empty catch block found, errors may be silently ignored.",
    "suggestion": "Log, rethrow, or handle exceptions securely instead of swallowing them.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-391",
    "snippet": "try { f(); } catch (e) {}",
    "detected_by": "Heuristic",
    "lines": [
      72,
      103,
      153,
      183,
      233
    ]
  },
  {
    "id": "GEN-HEUR-020",
    "file": "samples/js/app4.js",
    "line": 118,
    "severity": "MEDIUM",
    "category": "Sensitive Data Exposure",
    "message": "Use of document.cookie detected. Direct access can expose sensitive data and is prone to XSS/session hijacking.",
    "suggestion": "Avoid using document.cookie directly; use HttpOnly, Secure, SameSite flags or secure storage mechanisms.",
    "owasp": "A02:2021-CryptographicFailures,A03:2021-Injection,A05:2021-SecurityMisconfiguration",
    "cwe": "CWE-315,CWE-614",
    "snippet": "document.cookie = 'session=' + encodeURIComponent(SRC.token() || 'demo') + '; path=/'; // SINK",
    "detected_by": "AST",
    "lines": [
      118
    ]
  },
  {
    "id": "JS-FUNCTION-001",
    "file": "samples/js/app4.js",
    "line": 71,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of Function constructor is dangerous.",
    "suggestion": "Avoid Function(); use safer alternatives.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-95",
    "snippet": "const f = new Function('return (' + fnBody + ')'); // SINK",
    "detected_by": "AST",
    "lines": [
      71
    ]
  },
  {
    "id": "JS-XSS",
    "file": "samples/js/app4.js",
    "line": 244,
    "severity": "CRITICAL",
    "category": "Injection",
    "message": "Cross-Site Scripting (XSS): writing untrusted data to DOM.",
    "suggestion": "Use safe DOM APIs (e.g., textContent) or sanitize input with libraries like DOMPurify.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "snippet": "c.innerHTML += '<p>' + extra + '</p>'; // SINK",
    "detected_by": "Context-AST",
    "lines": [
      244
    ]
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index.php",
    "line": 12,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if(isset($_GET['cmd'])){",
    "detected_by": "Regex",
    "lines": [
      12
    ]
  },
  {
    "id": "PHP-XSS",
    "file": "samples/php/index.php",
    "line": 8,
    "severity": "CRITICAL",
    "category": "Injection",
    "message": "Reflected XSS detected: Echoing unsanitized user input.",
    "suggestion": "Use htmlspecialchars() or templating libraries that escape output by default.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-79",
    "snippet": "echo $_GET['html']; // XSS",
    "detected_by": "Regex",
    "lines": [
      8
    ]
  },
  {
    "id": "PHP-WEAK-HASH",
    "file": "samples/php/index.php",
    "line": 10,
    "severity": "HIGH",
    "category": "Cryptography",
    "message": "Weak hashing algorithm used.",
    "suggestion": "Use password_hash() with bcrypt or Argon2.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "CWE-327,CWE-328",
    "snippet": "$hash = md5($_GET['p']); // weak crypto",
    "detected_by": "Heuristic",
    "lines": [
      10
    ]
  },
  {
    "id": "PHP-INFO-DISCLOSURE",
    "file": "samples/php/index.php",
    "line": 19,
    "severity": "MEDIUM",
    "category": "Information Disclosure",
    "message": "Sensitive error information disclosure.",
    "suggestion": "Disable debug info in production.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures,A10:2021-Logging&MonitoringFailures",
    "cwe": "CWE-209",
    "snippet": "var_dump($e); // error leak",
    "detected_by": "Heuristic",
    "lines": [
      19
    ]
  },
  {
    "id": "PHP-NO-DB-ERROR-HANDLING-001",
    "file": "samples/php/index.php",
    "line": 2,
    "severity": "MEDIUM",
    "category": "Error Handling",
    "message": "Database connection created without proper error handling.",
    "suggestion": "Always wrap database connections in try/catch and log errors securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-252",
    "snippet": "$mysqli = new mysqli(\"localhost\",\"root\",\"\",\"db\");",
    "detected_by": "Heuristic",
    "lines": [
      2
    ]
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "file": "samples/php/index.php",
    "line": 13,
    "severity": "CRITICAL",
    "category": "Command Injection",
    "message": "system() called with user input \u2192 Command Injection.",
    "suggestion": "Avoid system(); use built-in APIs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "system(\"ls \" . $_GET['cmd']); // command injection",
    "detected_by": "Context-AST",
    "lines": [
      13
    ]
  },
  {
    "id": "PHP-EVAL-001",
    "file": "samples/php/index2.php",
    "line": 4,
    "severity": "HIGH",
    "category": "Dangerous Function",
    "message": "Use of eval() can lead to code injection.",
    "suggestion": "Avoid eval(); use safer alternatives.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "eval($code); // \u274c Dangerous",
    "detected_by": "Regex",
    "lines": [
      4
    ]
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index2.php",
    "line": 7,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "$file = $_GET['file'];",
    "detected_by": "Regex",
    "lines": [
      7
    ]
  },
  {
    "id": "PHP-WEAK-HASH",
    "file": "samples/php/index2.php",
    "line": 18,
    "severity": "HIGH",
    "category": "Cryptography",
    "message": "Weak hashing algorithm used.",
    "suggestion": "Use password_hash() with bcrypt or Argon2.",
    "owasp": "A02:2021-CryptographicFailures",
    "cwe": "CWE-327,CWE-328",
    "snippet": "$hash1 = md5($password);   // \u274c Weak hash",
    "detected_by": "Heuristic",
    "lines": [
      18,
      19
    ]
  },
  {
    "id": "PHP-MYSQLI-TAINT-001",
    "file": "samples/php/index2.php",
    "line": 14,
    "severity": "CRITICAL",
    "category": "Sql Injection",
    "message": "mysqli_query() with user input \u2192 SQL Injection.",
    "suggestion": "Always use prepared statements (mysqli_stmt or PDO).",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "$result = mysqli_query($conn, $query);",
    "detected_by": "Context-AST",
    "lines": [
      14
    ]
  },
  {
    "id": "PHP-INCLUDE-001",
    "file": "samples/php/index2.php",
    "line": 22,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$page = $_GET['page'];",
    "detected_by": "Regex",
    "lines": [
      22
    ]
  },
  {
    "id": "PHP-MOVE-UPLOAD-TAINT-001",
    "file": "samples/php/index2.php",
    "line": 38,
    "severity": "CRITICAL",
    "category": "Insecure File Upload",
    "message": "move_uploaded_file() without validation allows arbitrary file upload.",
    "suggestion": "Validate file type, size, and use randomized safe paths.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "move_uploaded_file($_FILES['file']['tmp_name'], \"uploads/\" . $_FILES['file']['name']); // \u274c No checks",
    "detected_by": "Context-AST",
    "lines": [
      38
    ]
  },
  {
    "id": "PHP-HEUR-023",
    "file": "samples/php/index2.php",
    "line": 42,
    "severity": "LOW",
    "category": "Session Handling",
    "message": "Session start detected, ensure secure flags are set.",
    "suggestion": "Use secure session cookies (HttpOnly, Secure, SameSite).",
    "owasp": "A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "",
    "snippet": "session_start(); // \u274c No secure cookie flags",
    "detected_by": "Heuristic",
    "lines": [
      42
    ]
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "file": "samples/php/index2.php",
    "line": 8,
    "severity": "CRITICAL",
    "category": "Command Injection",
    "message": "system() called with user input \u2192 Command Injection.",
    "suggestion": "Avoid system(); use built-in APIs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "system(\"cat \" . $file); // \u274c Dangerous",
    "detected_by": "Context-AST",
    "lines": [
      8
    ]
  },
  {
    "id": "PHP-CTX-001",
    "file": "samples/php/index2.php",
    "line": 23,
    "severity": "CRITICAL",
    "category": "File Inclusion",
    "message": "File include/require uses untrusted input.",
    "suggestion": "Do not include files based on user input. Use whitelisted paths.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "include($page . \".php\"); // \u274c Insecure include",
    "detected_by": "Context-AST",
    "lines": [
      23
    ]
  },
  {
    "id": "PHP-FILE-READ-001",
    "file": "samples/php/index3.php",
    "line": 27,
    "severity": "HIGH",
    "category": "Path Traversal",
    "message": "file_get_contents on user input may allow path traversal / arbitrary file read.",
    "suggestion": "Avoid using unvalidated input in file_get_contents.",
    "owasp": "A05:2021-SecurityMisconfiguration,A10:2021-SSRF",
    "cwe": "",
    "snippet": "$response = file_get_contents(\"http://\" . $url);",
    "detected_by": "Context-AST",
    "lines": [
      27,
      34
    ]
  },
  {
    "id": "PHP-HARDCODED-CREDS",
    "file": "samples/php/index3.php",
    "line": 6,
    "severity": "CRITICAL",
    "category": "Authentication",
    "message": "Hardcoded credentials detected in authentication check.",
    "suggestion": "Store credentials securely (e.g., env vars, config files) not in source code.",
    "owasp": "A01:2021-BrokenAccessControl,A02:2021-CryptographicFailures",
    "cwe": "CWE-798",
    "snippet": "if ($_GET['role'] === 'admin') {",
    "detected_by": "Regex",
    "lines": [
      6
    ]
  },
  {
    "id": "PHP-HARDCODED-SECRET-002",
    "file": "samples/php/index3.php",
    "line": 14,
    "severity": "HIGH",
    "category": "Insecure Design",
    "message": "Hardcoded secret or token detected.",
    "suggestion": "Use environment variables or a secrets manager.",
    "owasp": "A04:2021-InsecureDesign",
    "cwe": "",
    "snippet": "$secret = \"mySuperSecretApiKey123\";",
    "detected_by": "Regex",
    "lines": [
      14
    ]
  },
  {
    "id": "PHP-OUTDATED-MYSQL-001",
    "file": "samples/php/index3.php",
    "line": 20,
    "severity": "HIGH",
    "category": "Outdated Components",
    "message": "Use of deprecated mysql_connect() detected.",
    "suggestion": "Migrate to PDO or mysqli with prepared statements.",
    "owasp": "A06:2021-VulnerableandOutdatedComponents",
    "cwe": "",
    "snippet": "$conn = mysql_connect(\"localhost\", \"root\", \"password\");",
    "detected_by": "Regex",
    "lines": [
      20
    ]
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index4.php",
    "line": 6,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "echo preg_replace(\"/.*/e\", \"system('ls')\", $input);",
    "detected_by": "AST",
    "lines": [
      6
    ]
  },
  {
    "id": "PHP-INCLUDE-001",
    "file": "samples/php/index4.php",
    "line": 13,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$file = $_GET['page'];",
    "detected_by": "Regex",
    "lines": [
      13
    ]
  },
  {
    "id": "PHP-DESERIALIZATION",
    "file": "samples/php/index4.php",
    "line": 10,
    "severity": "CRITICAL",
    "category": "Insecure Deserialization",
    "message": "Untrusted unserialize() usage detected.",
    "suggestion": "Avoid unserialize(), use safe formats like JSON.",
    "owasp": "A08:2021-SoftwareIntegrityFailures,A08:2021-SoftwareandDataIntegrityFailures",
    "cwe": "CWE-502",
    "snippet": "$obj = unserialize($data);",
    "detected_by": "Context-AST",
    "lines": [
      10
    ]
  },
  {
    "id": "PHP-CTX-001",
    "file": "samples/php/index4.php",
    "line": 14,
    "severity": "CRITICAL",
    "category": "File Inclusion",
    "message": "File include/require uses untrusted input.",
    "suggestion": "Do not include files based on user input. Use whitelisted paths.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "include($file);",
    "detected_by": "Context-AST",
    "lines": [
      14
    ]
  },
  {
    "id": "PHP-SYSTEM-EXEC-001",
    "file": "samples/php/index5.php",
    "line": 22,
    "severity": "HIGH",
    "category": "Command Execution",
    "message": "Command execution can lead to injection if args are tainted.",
    "suggestion": "Avoid shell execution; use built-in APIs and strict validation.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "if (isset($_GET['cmd'])) {",
    "detected_by": "Regex",
    "lines": [
      22
    ]
  },
  {
    "id": "PHP-INCLUDE-001",
    "file": "samples/php/index5.php",
    "line": 27,
    "severity": "HIGH",
    "category": "File Inclusion",
    "message": "Dynamic include/require detected. May allow LFI/RFI.",
    "suggestion": "Never include user input in include/require paths. Use whitelists.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "if (isset($_GET['page'])) {",
    "detected_by": "Regex",
    "lines": [
      27
    ]
  },
  {
    "id": "PHP-HEUR-023",
    "file": "samples/php/index5.php",
    "line": 32,
    "severity": "LOW",
    "category": "Session Handling",
    "message": "Session start detected, ensure secure flags are set.",
    "suggestion": "Use secure session cookies (HttpOnly, Secure, SameSite).",
    "owasp": "A07:2021-IdentificationandAuthenticationFailures",
    "cwe": "",
    "snippet": "session_start();",
    "detected_by": "Heuristic",
    "lines": [
      32
    ]
  },
  {
    "id": "PHP-HARDCODED-CREDS-001",
    "file": "samples/php/index5.php",
    "line": 6,
    "severity": "HIGH",
    "category": "Sensitive Info Disclosure",
    "message": "Hardcoded database username detected.",
    "suggestion": "Use environment variables or config files instead of hardcoding credentials.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "CWE-798",
    "snippet": "$username = \"root\";",
    "detected_by": "Heuristic",
    "lines": [
      6
    ]
  },
  {
    "id": "PHP-NO-DB-ERROR-HANDLING-001",
    "file": "samples/php/index5.php",
    "line": 11,
    "severity": "MEDIUM",
    "category": "Error Handling",
    "message": "Database connection created without proper error handling.",
    "suggestion": "Always wrap database connections in try/catch and log errors securely.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-252",
    "snippet": "$conn = new mysqli($servername, $username, $password, $dbname);",
    "detected_by": "Heuristic",
    "lines": [
      11
    ]
  },
  {
    "id": "PHP-SYSTEM-AST-001",
    "file": "samples/php/index5.php",
    "line": 23,
    "severity": "CRITICAL",
    "category": "Command Injection",
    "message": "system() called with user input \u2192 Command Injection.",
    "suggestion": "Avoid system(); use built-in APIs.",
    "owasp": "A03:2021-Injection",
    "cwe": "",
    "snippet": "system($_GET['cmd']);",
    "detected_by": "Context-AST",
    "lines": [
      23
    ]
  },
  {
    "id": "PHP-CTX-001",
    "file": "samples/php/index5.php",
    "line": 28,
    "severity": "CRITICAL",
    "category": "File Inclusion",
    "message": "File include/require uses untrusted input.",
    "suggestion": "Do not include files based on user input. Use whitelisted paths.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "include($_GET['page']);",
    "detected_by": "Context-AST",
    "lines": [
      28
    ]
  },
  {
    "id": "PHP-FILE-READ-001",
    "file": "samples/php/index6.php",
    "line": 7,
    "severity": "HIGH",
    "category": "Path Traversal",
    "message": "file_get_contents on user input may allow path traversal / arbitrary file read.",
    "suggestion": "Avoid using unvalidated input in file_get_contents.",
    "owasp": "A05:2021-SecurityMisconfiguration",
    "cwe": "",
    "snippet": "$code = file_get_contents($argv[1] ?? \"test.php\");",
    "detected_by": "Context-AST",
    "lines": [
      7
    ]
  },
  {
    "id": "PHP-HEUR-021",
    "file": "samples/php/index6.php",
    "line": 4,
    "severity": "MEDIUM",
    "category": "Superglobals",
    "message": "Use of PHP superglobal $_REQUEST detected.",
    "suggestion": "Use $_GET or $_POST explicitly and validate input.",
    "owasp": "A01:2021-BrokenAccessControl",
    "cwe": "",
    "snippet": "* Detects if user input ($_GET, $_POST, $_REQUEST) flows into dangerous sinks",
    "detected_by": "Heuristic",
    "lines": [
      4,
      10
    ]
  },
  {
    "id": "PHP-WEAK-PASSWORD-POLICY-001",
    "file": "samples/php/index6.php",
    "line": 21,
    "severity": "HIGH",
    "category": "Weak Password Policy",
    "message": "Weak password validation \u2192 Users may choose weak passwords.",
    "suggestion": "Enforce minimum 8-character passwords with mixed character types.",
    "owasp": "",
    "cwe": "",
    "snippet": "if (preg_match('/(\\$[a-zA-Z_]\\w*)\\s*=\\s*' . preg_quote($src, '/') . '/', $line, $m)) {",
    "detected_by": "Heuristic",
    "lines": [
      21,
      28
    ]
  },
  {
    "id": "JAVA-RUNTIME-EXEC-REGEX",
    "file": "samples/java/jav1.java",
    "line": 81,
    "severity": "CRITICAL",
    "category": "Command Injection",
    "message": "Runtime.getRuntime().exec() detected.",
    "suggestion": "Avoid direct exec(); use ProcessBuilder with validated args.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-78",
    "snippet": "Process p = Runtime.getRuntime().exec(cmd);",
    "detected_by": "Regex",
    "lines": [
      81
    ]
  },
  {
    "id": "JAVA-STACKTRACE",
    "file": "samples/java/jav1.java",
    "line": 144,
    "severity": "MEDIUM",
    "category": "Information Disclosure",
    "message": "Stack trace leakage.",
    "suggestion": "Log securely without exposing stack traces.",
    "owasp": "A09:2021-SecurityLoggingandMonitoringFailures",
    "cwe": "CWE-209",
    "snippet": "e.printStackTrace();",
    "detected_by": "Regex",
    "lines": [
      144
    ]
  },
  {
    "id": "JAVA-SQL-HEURISTIC",
    "file": "samples/java/jav1.java",
    "line": 98,
    "severity": "HIGH",
    "category": "Sql Injection",
    "message": "Concatenating SQL queries with user input is dangerous.",
    "suggestion": "Use PreparedStatement with bind parameters.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-89",
    "snippet": "String sql = \"SELECT * FROM users WHERE username = '\" + user + \"'\";",
    "detected_by": "Heuristic",
    "lines": [
      98
    ]
  },
  {
    "id": "JAVA-DESERIALIZE-AST",
    "file": "samples/java/jav1.java",
    "line": 123,
    "severity": "HIGH",
    "category": "Insecure Deserialization",
    "message": "ObjectInputStream.readObject() detected.",
    "suggestion": "Avoid deserialization of untrusted data.",
    "owasp": "A08:2021-SoftwareandDataIntegrityFailures",
    "cwe": "CWE-502",
    "snippet": "Object obj = ois.readObject();",
    "detected_by": "AST",
    "lines": [
      123
    ]
  },
  {
    "id": "PY-EVAL-REGEX",
    "file": "samples/python/py1.py",
    "line": 8,
    "severity": "CRITICAL",
    "category": "Code Injection",
    "message": "Use of eval() can lead to code execution.",
    "suggestion": "Avoid eval(); use ast.literal_eval if parsing data.",
    "owasp": "A03:2021-Injection",
    "cwe": "CWE-94",
    "snippet": "eval(user_input)   # VULN: PY-EVAL-REGEX + PY-EVAL-TAINT",
    "detected_by": "Regex",
    "lines": [
      8
    ]
  },
  {
    "id": "PY-DESERIALIZATION",
    "file": "samples/python/py1.py",
    "line": 12,
    "severity": "CRITICAL",
    "category": "Insecure Deserialization",
    "message": "Untrusted pickle deserialization detected.",
    "suggestion": "Use safe serialization libraries (e.g., JSON).",
    "owasp": "A08:2021-SoftwareIntegrityFailures,A08:2021-SoftwareandDataIntegrityFailures",
    "cwe": "CWE-502",
    "snippet": "obj = pickle.load(f)  # VULN: PY-PICKLE-LOAD-HEURISTIC",
    "detected_by": "Heuristic",
    "lines": [
      12
    ]
  },
  {
    "id": "PY-PATH-TRAVERSAL-001",
    "file": "samples/python/py1.py",
    "line": 11,
    "severity": "CRITICAL",
    "category": "Path Traversal",
    "message": "User input flows into file open \u2192 Path Traversal / Arbitrary File Read.",
    "suggestion": "Validate or whitelist filenames; prevent '..' or absolute paths.",
    "owasp": "",
    "cwe": "",
    "snippet": "with open(\"data.pkl\", \"rb\") as f:",
    "detected_by": "Context-AST",
    "lines": [
      11
    ]
  }
]